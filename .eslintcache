[{"D:\\Workspace\\workspace\\Advanced Js\\portfolio\\src\\index.js":"1","D:\\Workspace\\workspace\\Advanced Js\\portfolio\\src\\serviceWorker.js":"2","D:\\Workspace\\workspace\\Advanced Js\\portfolio\\src\\App.js":"3","D:\\Workspace\\workspace\\Advanced Js\\portfolio\\src\\components\\index.js":"4","D:\\Workspace\\workspace\\Advanced Js\\portfolio\\src\\components\\Contact.js":"5","D:\\Workspace\\workspace\\Advanced Js\\portfolio\\src\\components\\Portfolio.js":"6","D:\\Workspace\\workspace\\Advanced Js\\portfolio\\src\\components\\Navbar.js":"7","D:\\Workspace\\workspace\\Advanced Js\\portfolio\\src\\components\\Resume.js":"8","D:\\Workspace\\workspace\\Advanced Js\\portfolio\\src\\components\\Pdf.js":"9","D:\\Workspace\\workspace\\Advanced Js\\portfolio\\src\\components\\Header.js":"10","D:\\Workspace\\workspace\\Advanced Js\\portfolio\\src\\components\\Particles.js":"11","D:\\Workspace\\workspace\\Advanced Js\\portfolio\\src\\components\\Footer.js":"12"},{"size":604,"mtime":1607383743744,"results":"13","hashOfConfig":"14"},{"size":5086,"mtime":1586882822146,"results":"15","hashOfConfig":"14"},{"size":779,"mtime":1607279318363,"results":"16","hashOfConfig":"14"},{"size":310,"mtime":1607105094530,"results":"17","hashOfConfig":"14"},{"size":5716,"mtime":1607535852728,"results":"18","hashOfConfig":"14"},{"size":9365,"mtime":1607564322077,"results":"19","hashOfConfig":"14"},{"size":3711,"mtime":1607103837405,"results":"20","hashOfConfig":"14"},{"size":15715,"mtime":1607525413006,"results":"21","hashOfConfig":"14"},{"size":967,"mtime":1607190171406,"results":"22","hashOfConfig":"14"},{"size":1683,"mtime":1607109101932,"results":"23","hashOfConfig":"14"},{"size":1195,"mtime":1595988767806,"results":"24","hashOfConfig":"14"},{"size":1374,"mtime":1605051353594,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1x0zqy0",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Workspace\\workspace\\Advanced Js\\portfolio\\src\\index.js",[],["53","54"],"D:\\Workspace\\workspace\\Advanced Js\\portfolio\\src\\serviceWorker.js",[],"D:\\Workspace\\workspace\\Advanced Js\\portfolio\\src\\App.js",[],"D:\\Workspace\\workspace\\Advanced Js\\portfolio\\src\\components\\index.js",[],"D:\\Workspace\\workspace\\Advanced Js\\portfolio\\src\\components\\Contact.js",["55"],"import React,{useState} from 'react';\r\nimport emailjs from 'emailjs-com';\r\nimport {makeStyles, responsiveFontSizes, withStyles} from '@material-ui/core/styles';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport {\r\n  TextField,\r\n  Typography,\r\n  Button,\r\n  Grid,\r\n  Box,\r\n  CircularProgress\r\n} from '@material-ui/core';\r\nimport SendIcon from '@material-ui/icons/Send';\r\n// import Navbar from './Navbar';\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n  heading: {\r\n    color: \"tomato\",\r\n    // padding: \"3rem 0\",\r\n    textAlign: \"center\",\r\n    textTransform: \"uppercase\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      fontSize: \"25px\"\r\n    }\r\n  },\r\n  form: {\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    position: \"absolute\",\r\n    [theme.breakpoints.down(\"450\")]: {\r\n      width: \"70%\"\r\n    }\r\n  },\r\n  button: {\r\n    marginTop: \"1rem\",\r\n    color: \"tomato\",\r\n    borderColor: \"tomato\"\r\n  },\r\n  loader: {\r\n    color: \"tomato\",\r\n    textAlign: \"center\",\r\n    left: \"43%\",\r\n    // transform: \"translate(-50%, -50%)\",\r\n    position: \"absolute\"\r\n  },\r\n  success: {\r\n    width:\"50%\", \r\n    float:\"right\", \r\n    background:\"#b5ffbd\", \r\n    color:\"black\", \r\n    fontWeight:\"bold\",\r\n    position:\"absolute\",\r\n    right: \"0\",\r\n    margin:\"70px 0 50px 0\",\r\n    zIndex: \"1\",\r\n    // transition: \"width 2s\",\r\n    // transitionTimingFunction: \"ease\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      width: \"90%\",\r\n      padding: \"2px\"\r\n    }\r\n  }\r\n}))\r\n\r\nconst InputField = withStyles({\r\n  root: {\r\n    \"& label.Mui-focused\": {\r\n      color: \"tomato\",\r\n    },\r\n    \"& label\": {\r\n      color: \"tan\"\r\n    },\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"& fieldset\": {\r\n        borderColor: \"tan\"\r\n      },\r\n      \"&:hover fieldset\": {\r\n        borderColor: \"tan\"\r\n      },\r\n      \"&.Mui-focused fieldset\": {\r\n        borderColor: \"tan\"\r\n      }\r\n    }\r\n  }\r\n})(TextField);\r\n\r\n\r\nconst Contact = () => {\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [loader, setLoader] = useState(false);\r\n  const [success, setSuccess] = useState(false);\r\n  const [error, setError] = useState(false);\r\n\r\n  const onSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    setLoader(true);\r\n\r\n    // Simple validation\r\n    if(name!=='' && email!=='' && message!==''){\r\n      sendEmail(e);\r\n      setError(false);\r\n    }\r\n    else{\r\n      setError(true);\r\n    }\r\n  }\r\n\r\n  const sendEmail = (e) => {\r\n\r\n    emailjs.sendForm('user_sKGK6AE6gUYr2ZssS2l', 'template_fgcq2hm', e.target, 'user_sKGK6AE6gUYr2ZssS2la8')\r\n    .then((result) => {\r\n      setSuccess(true)\r\n      setLoader(false)\r\n    }, (error) => {\r\n        console.log(error.text);\r\n    });\r\n  }\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setEmail(\"\");\r\n    setMessage(\"\");\r\n    setLoader(false);\r\n    setSuccess(false);\r\n    setError(false);\r\n  }\r\n    \r\n  const classes = useStyles();\r\n  return (\r\n    <Box component=\"div\" style={{background:\"#233\", height:\"100vh\"}}>\r\n      {/* <Navbar /> */}\r\n      {\r\n        success &&\r\n        <>\r\n          <Alert style={{paddingRight:\"10px\"}} severity=\"success\" className={classes.success} onClose={()=>{setSuccess(false)}}>\r\n            <AlertTitle>Hi {name}, <br/> Your message has been sent. <b/> We'll get back to you.</AlertTitle>\r\n          </Alert>\r\n        </>\r\n      }\r\n      <Grid container justify=\"center\" style={{width: \"auto\"}}>\r\n        <Box component=\"form\" className={classes.form} onSubmit={ onSubmitHandler }>\r\n          <Typography variant=\"h5\" className={classes.heading}>\r\n            hire or contact me\r\n          </Typography>\r\n          {\r\n            error &&\r\n              <>\r\n                <br/>\r\n                <Alert severity=\"error\">\r\n                  <AlertTitle>Please check all inputs</AlertTitle>\r\n                </Alert> \r\n              </>\r\n          }\r\n          <InputField \r\n            name=\"name\"\r\n            type=\"text\"\r\n            fullWidth={true}\r\n            label=\"Name/Company\" \r\n            variant=\"outlined\"\r\n            inputProps={{ style: {color:\"white\"} }}\r\n            margin=\"dense\" \r\n            size=\"medium\"\r\n            onChange={(e) => setName(e.target.value)}\r\n            value={name}\r\n            required\r\n          />\r\n          <br/>\r\n          <InputField\r\n            name=\"email\"\r\n            type=\"email\"\r\n            fullWidth={true} \r\n            label=\"Email\" \r\n            variant=\"outlined\" \r\n            inputProps={{ style: {color:\"white\"} }}\r\n            margin=\"dense\" \r\n            size=\"medium\"\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            value={email}\r\n            required\r\n          />\r\n          <br/>\r\n          <InputField\r\n            name=\"message\"\r\n            type=\"text\"\r\n            fullWidth={true} \r\n            label=\"Message\" \r\n            variant=\"outlined\" \r\n            inputProps={{ style: {color:\"white\"} }}\r\n            margin=\"dense\" \r\n            size=\"medium\"\r\n            onChange={(e) => setMessage(e.target.value)}\r\n            value={message}\r\n            required\r\n          />\r\n          <br/>\r\n          {loader && <CircularProgress size={24} className={classes.loader}/>}\r\n          <br/>\r\n          <Button \r\n            className={classes.button} \r\n            variant=\"outlined\" \r\n            fullWidth={true} \r\n            endIcon={<SendIcon/>}\r\n            type=\"submit\"\r\n          >\r\n            contact me\r\n          </Button>\r\n          <br/>\r\n          <Button\r\n            type=\"button\"\r\n            onClick={()=>reset()}\r\n          >\r\n            reset\r\n          </Button>\r\n        </Box>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Contact;\r\n","D:\\Workspace\\workspace\\Advanced Js\\portfolio\\src\\components\\Portfolio.js",[],"D:\\Workspace\\workspace\\Advanced Js\\portfolio\\src\\components\\Navbar.js",[],"D:\\Workspace\\workspace\\Advanced Js\\portfolio\\src\\components\\Resume.js",[],"D:\\Workspace\\workspace\\Advanced Js\\portfolio\\src\\components\\Pdf.js",["56"],"import React, { useState } from 'react';\r\nimport { Document, Page, pdfjs } from \"react-pdf\";\r\nimport resume from '../files/Emmanuel-Resume.pdf';\r\nimport cv from '../files/Emma-Darko-CV.pdf';\r\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\r\n \r\nfunction Pdf(props) {\r\n  const [numPages, setNumPages] = useState(null);\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n \r\n  function onDocumentLoadSuccess({ numPages }) {\r\n    setNumPages(numPages);\r\n  }\r\n  const doc = props.match.params.id;\r\n \r\n  return (\r\n    <div>\r\n      <Document\r\n        file={doc==='cv'? cv : resume}\r\n        onLoadSuccess={onDocumentLoadSuccess}\r\n        onLoadError={e=>console.log(e)}\r\n        options={{workerSrc: \"pdf.worker.js\"}}\r\n        style={{width:\"100%\"}}\r\n      >\r\n        <Page pageNumber={pageNumber} />\r\n      </Document>\r\n      <p>Page {pageNumber} of {numPages}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Pdf;","D:\\Workspace\\workspace\\Advanced Js\\portfolio\\src\\components\\Header.js",[],"D:\\Workspace\\workspace\\Advanced Js\\portfolio\\src\\components\\Particles.js",[],"D:\\Workspace\\workspace\\Advanced Js\\portfolio\\src\\components\\Footer.js",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":3,"column":21,"nodeType":"63","messageId":"64","endLine":3,"endColumn":40},{"ruleId":"61","severity":1,"message":"65","line":9,"column":22,"nodeType":"63","messageId":"64","endLine":9,"endColumn":35},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'responsiveFontSizes' is defined but never used.","Identifier","unusedVar","'setPageNumber' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]